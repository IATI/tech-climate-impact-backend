openapi: '3.0.0'
info:
  version: '0.2.5'
  title: 'tech-climate-impact-backend'
  description: API to serve technical climate impact metrics from a mongoDB to the frontend

servers:
  - url: 'http://localhost:7071'
    description: Local Function
  - url: 'https://func-tci-services.azurewebsites.net'
    description: Azure Function (requires auth)

paths:
    /api/metrics:
        get:
            summary: GET metrics
            parameters:
                 - name: startdate
                   description: Start date for metrics
                   in: query
                   required: true
                   schema:
                       type: string
                       example: '2022-03-09'
                 - name: enddate
                   description: End date for metrics
                   in: query
                   required: true
                   schema:
                       type: string
                       example: '2022-03-10'
            responses:
                200:
                    description: TCI Metrics data
                    content:
                      application/json:
                        schema:
                          type: array
                          items:
                            type: object
                            properties:
                              _id:
                                type: string
                              type:
                                type: string
                                enum:
                                  - 'cost'
                                  - 'avgCPU'
                                  - 'avgServerRes'
                                  - 'acu'
                                  - 'dbCompute'
                                  - 'totalByteWeight'
                                  - 'tti'
                              displayName:
                                type: string
                              description:
                                type: string
                              unit:
                                type: string
                              unitDescription:
                                type: string
                              startDate:
                                type: string
                              endDate:
                                type: string
                              value:
                                type: number
                              __v:
                                type: integer
                401:
                  $ref: "#/components/responses/UnauthorizedError"
                422:
                  description: Unprocessable Entity
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/Error"
                      examples:
                        missingQueryParams:
                          value:
                            error: 'enddate and startdate are required query parameters'
                500:
                    description: Server Error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

    /api/pub/version:
        get:
            summary: GET application version
            responses:
                200:
                    description: Version of the application in semver format
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: 1.0.7
                401:
                  $ref: "#/components/responses/UnauthorizedError"
                500:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
components:
    responses:
      UnauthorizedError:
        description: API key is missing or invalid
    schemas:
        Error:
          type: object
          required:
              - error
          properties:
              error:
                  description: A human readable error message
                  type: string
        ResponseMessage:
          type: object
          required:
            - message
          properties:
            message:
              description: A human readable response message
              type: string
    securitySchemes:
        ApiKeyHeader:
            type: apiKey
            in: header
            name: x-functions-key
        ApiKeyQuery:
            type: apiKey
            in: query
            name: x-functions-key
security:
    - ApiKeyHeader: []
    - ApiKeyQuery: []
